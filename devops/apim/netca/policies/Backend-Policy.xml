<!--
    IMPORTANT:
    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.
    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.
    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.
    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.
    - To remove a policy, delete the corresponding policy statement from the policy document.
    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.
    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.
    - Policies are applied in the order of their appearance, from the top down.
    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.
-->
<policies>
  <inbound>
    <base />
    <set-backend-service backend-id="DAD-NETCA" />
    <cors>
      <allowed-origins>
        <origin>*</origin>
      </allowed-origins>
      <allowed-methods>
        <method>*</method>
      </allowed-methods>
      <allowed-headers>
        <header>*</header>
      </allowed-headers>
    </cors>
    <choose>
      <when condition="@(context.Request.OriginalUrl.Host == "apigateway.unitedtractors.com")">
        <set-variable name="dad-netca-calls" value="{{dad-netca-calls}}" />
        <set-variable name="dad-netca-new-period" value="{{dad-netca-new-period}}" />
        <rate-limit-by-key calls="@(int.Parse(context.Variables.GetValueOrDefault<string>("dad-netca-calls")))" renewal-period="@(int.Parse(context.Variables.GetValueOrDefault<string>("dad-netca-new-period")))" counter-key="@(context.Request.IpAddress)" />
      </when>
    </choose>
  </inbound>
  <backend>
    <base />
  </backend>
  <outbound>
    <base />
    <set-header name="Access-Control-Allow-Origin" exists-action="override">
      <value>*</value>
    </set-header>
    <set-header name="Access-Control-Allow-Headers" exists-action="override">
      <value>*</value>
    </set-header>
    <set-header name="Access-Control-Allow-Methods" exists-action="override">
      <value>*</value>
    </set-header>
  </outbound>
  <on-error>
    <base />
  </on-error>
</policies>